#version 330 core

in vec4 position;
in vec4 normal;
in vec3 translation;
in vec4 orientation;
in vec4 color;

out vec3 position_world;
out vec3 normal_world;
out vec4 color_fs;

vec4 quat_normed(vec4 q);
vec3 quat_rotate(vec3 pos, vec4 q);

//***** begin interface of view.glsl ***********************************
mat4 get_modelview_projection_matrix();
//***** end interface of view.glsl ***********************************

void main()
{
    // rotate vertex
    vec3 pos = quat_rotate(position.xyz, orientation);

    position_world = pos + translation;
    
    normal_world = quat_rotate(normal.xyz, orientation);
    
    gl_Position = get_modelview_projection_matrix() * vec4(position_world, 1.0f);

    color_fs = color;
}